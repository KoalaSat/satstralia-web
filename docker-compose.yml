version: '3.4'

services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '80:80'
      - '443:443'
    restart: always
    depends_on:
      - tor_main
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - /var/www/certbot:/var/www/certbot/:ro
      - /etc/letsencrypt/:/etc/nginx/ssl/:ro
    networks:
      - nginx
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot:latest
    restart: always
    volumes:
      - /var/www/certbot/:/var/www/certbot/:rw
      - /etc/letsencrypt/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  nostr:
    build: https://github.com/rnostr/rnostr.git
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - nginx
    volumes:
      - ./rnostr/data:/rnostr/data:rw
      - ./rnostr/config:/rnostr/config:rw
    networks:
      - nginx
  uptime_kuma:
    image: louislam/uptime-kuma
    restart: always
    ports:
      - 3001:3001
    depends_on:
      - tor_proxy
    volumes:
      - ./uptimekuma/data:/app/data:rw
    networks:
      - nginx
  tor_proxy:
    build: ./tor
    restart: always
    environment:
      LOCAL_USER_ID: 1000
      LOCAL_GROUP_ID: 1000
    volumes:
      - ./tor/data:/var/lib/tor
      - ./tor/config:/etc/tor
    ports:
      - 9001:9001
      - 9050:9050
    networks:
      - nginx
  tor_main:
    build: ./tor/tor_proxy
    restart: always
    environment:
      PUBLIC_PORT: 5100
      TOR_SITE: satstraoq35jffvkgpfoqld32nzw2siuvowanruindbfojowpwsjdgad.onion
      TOR_SITE_PORT: 80
    ports:
      - 5100:5100
    networks:
      - nginx
networks:
  nginx:
    driver: bridge
    external: true
